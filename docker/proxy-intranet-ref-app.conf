###################################################
#SECURITY CONTROLS SECTION#1 - INTRANET ACCESS ONLY
###################################################

#set IP whitelist
map $http_x_forwarded_for $x_forwarded_no_port {
  ~(?P<IPADDR>\d+\.\d+\.\d+\.\d+):.* $IPADDR;
}
geo $x_forwarded_no_port $allow {
    proxy_recursive;
    default false;
    127.0.0.1 true;
    161.165.196.0/24 true;
    161.168.251.0/24 true;
    161.167.229.0/24 true;
    161.163.44.0/24 true;
    216.207.42.0/24 true;
    161.167.237.0/24 true;
    204.235.124.0/22 true;
    104.209.126.20 true;
    104.209.117.20 true;
    104.209.127.5 true;
    104.209.125.5 true;
    104.209.114.31 true;
    104.209.115.31 true;
    52.179.142.177 true; 
    104.210.57.6 true;
    40.84.32.55 true;
    40.76.217.170 true;
    157.55.192.97 true;
    40.85.170.7 true;
    13.64.91.52 true;
    161.170.193.0/24 true;
    161.170.124.0/23 true;
    104.45.141.247 true;
    137.135.68.200 true;
    40.114.0.237 true;
    137.135.72.121 true;
    104.45.154.191 true;
    137.117.65.231 true;
    104.41.156.195 true;
    137.135.71.44 true;
    137.135.69.14, true;
    23.100.31.222 true;

}

###################################################
#REVERSE PROXY TO A LOCAL PROCESS
###################################################
upstream app_servers {

    server 127.0.0.1:3000;

}

###################################################
#SERVER CONFIGURATION
###################################################
server {

    # Running port
    listen 80;

    #Control the request Methods allowed
    # The Request Methods being GET|HEAD|POST|TRACE|DELETE|PUT|OPTIONS
    #if ($request_method !~ ^(GET|HEAD|POST)$ )
    #{
    #       return 405;
    #}


    error_page 401 402 403 404 /404.html; #Prevent regular 401/403 pages.

    # Proxying the connections connections
    location / {

        proxy_pass         http://127.0.0.1:3000;

        proxy_redirect    off;
        proxy_set_header  Host $host;
        proxy_set_header  X-Real-IP  $remote_addr;
        proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header  X-Forwarded-Host $server_name;
        proxy_hide_header X-Powered-By;
        client_max_body_size  10m;
        client_body_buffer_size 128k;
        proxy_connect_timeout 90s;
        proxy_send_timeout 90s;
        proxy_read_timeout 90s;
        proxy_buffers 32 4k;

        if ($allow = false) {
          #return 403;
          # HTTP 444 return code may result the frontend device like an Application Gateway to return "Server Error"
          #This was observed on Azure
          #return 444; #The non-standard code 444 closes a connection without sending a response header.
          return 302 https://www.google.com;
        }
    }

    #Azure Web app for Containers checks this and expects a 404, otherwise the service won't start.
    location /robots933456.txt {
        return 404;
    }
    
	location /ecv {
		proxy_pass         http://127.0.0.1:3000/ecv;
    }
        
}
